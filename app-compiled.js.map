{"version":3,"sources":["app.js"],"names":[],"mappings":";;AAAA,IAAI,UAAU,QAAQ,SAAR,CAAd;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,UAAU,QAAQ,eAAR,CAAd;AACA,IAAI,SAAS,QAAQ,QAAR,CAAb;AACA,IAAI,eAAe,QAAQ,eAAR,CAAnB;AACA,IAAI,aAAa,QAAQ,aAAR,CAAjB;;AAEA,IAAI,WAAW,QAAQ,8BAAR,CAAf;AACA,IAAI,YAAY,QAAQ,qBAAR,CAAhB;;AAEA,IAAI,SAAS,QAAQ,gBAAR,CAAb;AACA,IAAI,QAAQ,QAAQ,gBAAR,CAAZ;;AAEA,IAAI,MAAM,SAAV;;AAEA,IAAI,GAAJ,CAAQ,GAAR,EAAa,UAAS,GAAT,EAAc,GAAd,EAAmB,IAAnB,EAAyB;AACpC,MAAI,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACA,MAAI,MAAJ,CAAW,8BAAX,EAA2C,kBAA3C;AACA,MAAI,MAAJ,CAAW,8BAAX,EAA0C,6BAA1C;AACA,MAAI,MAAJ,CAAW,wCAAX;AACA,MAAI,MAAJ,CAAW,cAAX,EAA0B,QAA1B;AACA;AACD,CAPD;;AASA;AACA,IAAI,GAAJ,CAAQ,OAAR,EAAiB,KAAK,IAAL,CAAU,SAAV,EAAqB,OAArB,CAAjB;AACA,IAAI,GAAJ,CAAQ,aAAR,EAAuB,MAAvB;;AAEA;AACA;AACA,IAAI,GAAJ,CAAQ,OAAO,KAAP,CAAR;AACA,IAAI,GAAJ,CAAQ,WAAW,IAAX,EAAR;AACA,IAAI,GAAJ,CAAQ,WAAW,UAAX,CAAsB,EAAE,UAAU,KAAZ,EAAtB,CAAR;AACA,IAAI,GAAJ,CAAQ,cAAR;AACA,IAAI,GAAJ,CAAQ,QAAQ,MAAR,CAAe,KAAK,IAAL,CAAU,SAAV,EAAqB,QAArB,CAAf,CAAR;;AAEA,IAAI,GAAJ,CAAQ,GAAR,EAAa,MAAb;AACA,IAAI,GAAJ,CAAQ,QAAR,EAAkB,KAAlB;;AAEA;AACA,IAAI,GAAJ,CAAQ,UAAS,GAAT,EAAc,GAAd,EAAmB,IAAnB,EAAyB;AAC/B,MAAI,MAAM,IAAI,KAAJ,CAAU,WAAV,CAAV;AACA,MAAI,MAAJ,GAAa,GAAb;AACA,OAAK,GAAL;AACD,CAJD;;AAMA;;AAEA;AACA;AACA,IAAI,IAAI,GAAJ,CAAQ,KAAR,MAAmB,aAAvB,EAAsC;AACpC,MAAI,GAAJ,CAAQ,UAAS,GAAT,EAAc,GAAd,EAAmB,GAAnB,EAAwB,IAAxB,EAA8B;AACpC,QAAI,MAAJ,CAAW,IAAI,MAAJ,IAAc,GAAzB;AACA,QAAI,MAAJ,CAAW,OAAX,EAAoB;AAClB,eAAS,IAAI,OADK;AAElB,aAAO;AAFW,KAApB;AAID,GAND;AAOD;;AAED;AACA;AACA,IAAI,GAAJ,CAAQ,UAAS,GAAT,EAAc,GAAd,EAAmB,GAAnB,EAAwB,IAAxB,EAA8B;AACpC,MAAI,MAAJ,CAAW,IAAI,MAAJ,IAAc,GAAzB;AACA,MAAI,MAAJ,CAAW,OAAX,EAAoB;AAClB,aAAS,IAAI,OADK;AAElB,WAAO;AAFW,GAApB;AAID,CAND;;AAQA,IAAI,KAAJ,GAAY,UAAU,MAAV,EAAkB;AAC1B,WAAS,MAAT,CAAgB,MAAhB;AACA,YAAU,IAAV;AACH,CAHD;;AAKA,OAAO,OAAP,GAAiB,GAAjB","file":"app-compiled.js","sourcesContent":["var express = require('express');\nvar path = require('path');\nvar favicon = require('serve-favicon');\nvar logger = require('morgan');\nvar cookieParser = require('cookie-parser');\nvar bodyParser = require('body-parser');\n\nvar IoServer = require('./socket_server/socketServer');\nvar TableRepo = require('./domains/tableRepo');\n\nvar routes = require('./routes/index');\nvar users = require('./routes/users');\n\nvar app = express();\n\napp.all('*', function(req, res, next) {\n  res.header(\"Access-Control-Allow-Origin\", \"*\");\n  res.header(\"Access-Control-Allow-Headers\", \"X-Requested-With\");\n  res.header(\"Access-Control-Allow-Methods\",\"PUT,POST,GET,DELETE,OPTIONS\");\n  res.header(\"Access-Control-Allow-Credentials: true\");\n  res.header(\"X-Powered-By\",' 3.2.1');\n  next();\n});\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'jade');\n\n// uncomment after placing your favicon in /public\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/', routes);\napp.use('/users', users);\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  var err = new Error('Not Found');\n  err.status = 404;\n  next(err);\n});\n\n// error handlers\n\n// development error handler\n// will print stacktrace\nif (app.get('env') === 'development') {\n  app.use(function(err, req, res, next) {\n    res.status(err.status || 500);\n    res.render('error', {\n      message: err.message,\n      error: err\n    });\n  });\n}\n\n// production error handler\n// no stacktraces leaked to user\napp.use(function(err, req, res, next) {\n  res.status(err.status || 500);\n  res.render('error', {\n    message: err.message,\n    error: {}\n  });\n});\n\napp.ready = function (server) {\n    IoServer.attach(server);\n    TableRepo.init();\n};\n\nmodule.exports = app;\n"]}